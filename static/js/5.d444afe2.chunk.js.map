{"version":3,"sources":["components/Profile/PersonalProfilePage/PersonalProfile.module.css","components/Profile/Registration/Button/Button.module.css","components/Profile/Registration/Profile.module.css","components/Profile/Registration/ProfileInput/ProfileInput.module.css","firebase.js","components/Profile/PersonalProfilePage/PersonalProfile.tsx","components/Profile/Registration/Button/Button.tsx","components/Profile/Registration/ProfileInput/ProfileInput.tsx","components/Profile/Registration/Profile.tsx"],"names":["module","exports","app","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","auth","userProfileHandler","userAuth","additionalInfo","a","cartOrderTotalPriceArr","reduce","acom","current","totalPriseOrder","cartOrderTotalCountArr","totalCountOrder","uid","currentUserRef","doc","get","exists","email","timestamp","Date","currentTime","day","getDate","month","getMonth","year","getFullYear","minute","getMinutes","hours","getHours","set","date","totalOrderGoodsCount","totalOrderGoodsPrice","PersonalProfile","logOut","order","useAppSelector","selectOrderValue","className","styles","personalProfile","personalProfileData","personalProfileFormTitle","personalEmail","personalEmailIcon","size","personalEmailData","personalEmailDataTitle","personalEmailDataMail","personalSale","personalSaleTitle","personalSaleResult","type","accountButton","onClick","length","orderWrapper","orderTitle","orderText","accomulator","item","Button","text","handler","button","ProfileInput","onChange","placeholder","value","input","min-length","max-length","required","Profile","dispatch","useAppDispatch","userFromState","selectCurrentUser","useState","setEmail","password","setPassword","error","setError","alreadyHasAccount","setAlreadyHasAccount","cleanErrors","authListener","useCallback","onAuthStateChanged","userRef","onSnapshot","snapshot","setCurrentUser","id","data","useEffect","profile","signOut","profileWrapper","profileTitle","e","target","errorMessage","preventDefault","signInWithEmailAndPassword","catch","code","message","accountMessage","accountMessageTitle","createUserWithEmailAndPassword","then","userCredential","user"],"mappings":"gHACAA,EAAOC,QAAU,CAAC,gBAAkB,yCAAyC,oBAAsB,6CAA6C,yBAA2B,kDAAkD,cAAgB,uCAAuC,kBAAoB,2CAA2C,uBAAyB,gDAAgD,sBAAwB,+CAA+C,kBAAoB,2CAA2C,aAAe,sCAAsC,kBAAoB,2CAA2C,mBAAqB,4CAA4C,cAAgB,uCAAuC,aAAe,sCAAsC,MAAQ,+BAA+B,WAAa,oCAAoC,UAAY,qC,mBCAv6BD,EAAOC,QAAU,CAAC,OAAS,yB,mBCA3BD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,eAAiB,gCAAgC,aAAe,8BAA8B,aAAe,8BAA8B,eAAiB,gCAAgC,oBAAsB,uC,mBCAvQD,EAAOC,QAAU,CAAC,MAAQ,8B,kGCIpBC,G,YAAMC,IAASC,cAAc,CACjCC,OAAQC,0CACRC,WAAYD,kCACZE,UAAWF,kBACXG,cAAeH,8BACfI,kBAAmBJ,eACnBK,MAAOL,+CAIIM,GADOV,EAAIW,OACCX,EAAIU,aAEhBE,EAAkB,uCAAG,WAAOC,EAAUC,GAAjB,2BAAAC,EAAA,yDAE1BC,EAAyBF,EAAeG,QAC5C,SAACC,EAAMC,GAAP,OAAmBD,EAAOC,EAAQC,kBAClC,GAEIC,EAAyBP,EAAeG,QAC5C,SAACC,EAAMC,GAAP,OAAmBD,EAAOC,EAAQG,kBAClC,GAEGT,EAV2B,wDAWxBU,EAAQV,EAARU,IAEFC,EAAiBd,EAAUe,IAAV,gBAAuBF,IAbd,SAcTC,EAAeE,MAdN,iBAelBC,OAfkB,wBAgBtBC,EAAUf,EAAVe,MACFC,EAAY,IAAIC,KAChBC,EAAc,CAClBC,IAAKH,EAAUI,UACfC,MAAOL,EAAUM,WAAa,EAC9BC,KAAMP,EAAUQ,cAChBC,OAAQT,EAAUU,aAClBC,MAAOX,EAAUY,YAvBW,UAyBxBjB,EAAekB,IAAI,CAEvBd,QACAe,KAAMZ,EACNa,qBAAsBvB,EACtBwB,qBAAsB7B,IA9BM,iCAiCzBQ,GAjCyB,4CAAH,wDAoChBxB,I,wDC3CF8C,EAAmC,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,OAAQnB,EAAY,EAAZA,MACnDoB,EAAQC,YAAeC,KAE7B,OACE,0BAASC,UAAWC,IAAOC,gBAA3B,UACE,sBAAKF,UAAWC,IAAOE,oBAAvB,UACE,oBAAIH,UAAWC,IAAOG,yBAAtB,4EACA,sBAAKJ,UAAWC,IAAOI,cAAvB,UACE,qBAAKL,UAAWC,IAAOK,kBAAvB,SACE,cAAC,IAAD,CAAcC,KAAM,QAGtB,sBAAKP,UAAWC,IAAOO,kBAAvB,UACE,sBAAMR,UAAWC,IAAOQ,uBAAxB,sCACA,sBAAMT,UAAWC,IAAOS,sBAAxB,SAAgDjC,UAGpD,sBAAKuB,UAAWC,IAAOU,aAAvB,UACE,qBAAKX,UAAWC,IAAOW,kBAAvB,uHACA,qBAAKZ,UAAWC,IAAOY,mBAAvB,oBAGF,wBAAQC,KAAK,SAASd,UAAWC,IAAOc,cAAeC,QAASpB,EAAhE,+CAKF,gCACE,oBAAII,UAAWC,IAAOG,yBAAtB,gEACCP,EAAMoB,OACL,qBAAKjB,UAAWC,IAAOiB,aAAvB,SACE,sBAAKlB,UAAWC,IAAOJ,MAAvB,UACE,qBAAKG,UAAWC,IAAOkB,WAAvB,2IACA,sBAAKnB,UAAWC,IAAOmB,UAAvB,0EAEE,iCACG,IACAvB,EAAM/B,QACL,SAACuD,EAAaC,GAAd,OAAuBD,EAAcC,EAAKnD,kBAC1C,GACC,IALL,iEASF,sBAAK6B,UAAWC,IAAOmB,UAAvB,uFAEE,iCACG,IACAvB,EAAM/B,QACL,SAACuD,EAAaC,GAAd,OAAuBD,EAAcC,EAAKrD,kBAC1C,GACC,IALL,kDAYN,qBAAK+B,UAAWC,IAAOiB,aAAvB,SACE,sBAAKlB,UAAWC,IAAOJ,MAAvB,UACE,mBAAGG,UAAWC,IAAOkB,WAArB,8HACA,mBAAGnB,UAAWC,IAAOmB,UAArB,iR,iBC/DDG,EAA0B,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAC9C,OACE,wBAAQX,KAAK,SAASE,QAASS,EAASzB,UAAWC,IAAOyB,OAA1D,SACGF,K,kCCDMG,EAAgC,SAAC,GAKvC,IAJLC,EAII,EAJJA,SACAC,EAGI,EAHJA,YACAf,EAEI,EAFJA,KACAgB,EACI,EADJA,MAEA,OACE,8BACE,uBACEhB,KAAMA,EACNe,YAAaA,EACbC,MAAOA,EACPF,SAAUA,EACV5B,UAAWC,IAAO8B,MAClBC,aAAW,IACXC,aAAW,KACXC,UAAQ,OC8JDC,UA7KC,WACd,IAAMC,EAAWC,cACXxC,EAAQC,YAAeC,KACvBuC,EAAgBxC,YAAeyC,KAHjB,EAKMC,mBAAS,IALf,mBAKb/D,EALa,KAKNgE,EALM,OAMYD,mBAAS,IANrB,mBAMbE,EANa,KAMHC,EANG,OAOMH,mBAAS,IAPf,mBAObI,EAPa,KAONC,EAPM,OAQ8BL,oBAAS,GARvC,mBAQbM,EARa,KAQMC,EARN,KAedC,EAAc,WAClBH,EAAS,KAoDLI,EAAeC,uBAAY,WAE/BrG,EAAIW,OAAO2F,mBAAX,+BAAAvF,EAAA,MAA8B,WAAOF,GAAP,eAAAE,EAAA,0DACxBF,EADwB,gCAEJD,EAAmBC,EAAUmC,GAFzB,OAGnB,QADDuD,EAFoB,cAGnB,IAAPA,KAASC,YAAW,SAACC,GAEnBlB,EACEmB,YAAe,aACbC,GAAIF,EAASE,IACVF,EAASG,aAnEtBhB,EAAS,IACTE,EAAY,IA0DkB,sBAc1BP,EAASmB,YAAe7F,IAdE,2CAA9B,yDAiBC,CAAC0E,EAAUvC,IAEd6D,qBAAU,WAER,OADAT,IACO,WAELA,OAED,CAACA,IAUJ,OACE,yBAASjD,UAAWC,IAAO0D,QAA3B,SACGrB,EACC,cAAC,EAAD,CAAiB1C,OA5CD,WACpB/C,EAAIW,OAAOoG,WA2CiCnF,MAAO6D,EAAc7D,QAG7D,sBAAKuB,UAAWC,IAAO4D,eAAvB,UACE,oBAAI7D,UAAWC,IAAO6D,aAAtB,4CACA,cAAC,EAAD,CACElC,SAjBc,SAACmC,GACvBtB,EAASsB,EAAEC,OAAOlC,QAiBVA,MAAOrD,EACPqC,KAAK,QACLe,YAAY,UAEd,cAAC,EAAD,CACED,SAnBkB,SAACmC,GAC3BpB,EAAYoB,EAAEC,OAAOlC,QAmBbA,MAAOY,EACP5B,KAAK,WACLe,YAAY,yCAEd,mBAAG7B,UAAWC,IAAOgE,aAArB,SAAoCrB,IACnCE,EACC,qCACE,cAAC,EAAD,CAAQrB,QA7GC,SAACsC,GACpBA,EAAEG,iBACFlB,IACAnG,EACGW,OACA2G,2BAA2B1F,EAAOiE,GAClC0B,OAAM,SAACxB,GACN,OAAQA,EAAMyB,MACZ,IAAK,qBACL,IAAK,qBACL,IAAK,sBAGL,IAAK,sBACHxB,EAASD,EAAM0B,cA+FkB9C,KAAK,mCACpC,8BACE,uBAAMxB,UAAWC,IAAOsE,eAAxB,UACG,IADH,0HAE2B,OAE3B,sBACEvE,UAAWC,IAAOuE,oBAClBxD,QAAS,kBACP+B,GACE,SAACD,GAAD,OAAwBA,MAJ9B,0HAaJ,qCACE,cAAC,EAAD,CAAQrB,QA5GE,SAACsC,GACrBA,EAAEG,iBACFlB,IACAnG,EACGW,OACAiH,+BAA+BhG,EAAOiE,GACtCgC,MAAK,SAACC,GAAoB,IACjBC,EAASD,EAATC,KACRnH,EAAmBmH,EAAM/E,MAE1BuE,OAAM,SAACxB,GACN,OAAQA,EAAMyB,MACZ,IAAK,4BACL,IAAK,qBAGL,IAAK,qBACHxB,EAASD,EAAM0B,cA2FmB9C,KAAK,iHACrC,8BACE,uBAAMxB,UAAWC,IAAOsE,eAAxB,UACG,IADH,0FAEoB,OAEpB,sBACEvE,UAAWC,IAAOuE,oBAClBxD,QAAS,kBACP+B,GACE,SAACD,GAAD,OAAwBA,MAJ9B","file":"static/js/5.d444afe2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"personalProfile\":\"PersonalProfile_personalProfile__3yvk2\",\"personalProfileData\":\"PersonalProfile_personalProfileData__hAi63\",\"personalProfileFormTitle\":\"PersonalProfile_personalProfileFormTitle__2Wq0w\",\"personalEmail\":\"PersonalProfile_personalEmail__2P8_W\",\"personalEmailData\":\"PersonalProfile_personalEmailData__2v3j3\",\"personalEmailDataTitle\":\"PersonalProfile_personalEmailDataTitle__1IaBR\",\"personalEmailDataMail\":\"PersonalProfile_personalEmailDataMail__5aCI0\",\"personalEmailIcon\":\"PersonalProfile_personalEmailIcon__1LcVT\",\"personalSale\":\"PersonalProfile_personalSale__BKQLL\",\"personalSaleTitle\":\"PersonalProfile_personalSaleTitle__1OvB_\",\"personalSaleResult\":\"PersonalProfile_personalSaleResult__1aOd0\",\"accountButton\":\"PersonalProfile_accountButton__U-0UW\",\"orderWrapper\":\"PersonalProfile_orderWrapper__3bVhh\",\"order\":\"PersonalProfile_order__2qAZJ\",\"orderTitle\":\"PersonalProfile_orderTitle__3ygtC\",\"orderText\":\"PersonalProfile_orderText__WwQzJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__sLNpF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__3G0zv\",\"profileWrapper\":\"Profile_profileWrapper__1P8zD\",\"profileTitle\":\"Profile_profileTitle__qULdk\",\"errorMessage\":\"Profile_errorMessage__3Ghvy\",\"accountMessage\":\"Profile_accountMessage__dqrSj\",\"accountMessageTitle\":\"Profile_accountMessageTitle__19jk2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"ProfileInput_input__1aSko\"};","/* eslint-disable consistent-return */\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\n\nconst app = firebase.initializeApp({\n  apiKey: process.env.REACT_APP_FIREBAZE_KEY,\n  authDomain: process.env.REACT_APP_FIREBAZE_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_FIREBAZE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBAZE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBAZE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBAZE_APP_ID,\n});\n\nexport const auth = app.auth();\nexport const firestore = app.firestore();\n\nexport const userProfileHandler = async (userAuth, additionalInfo) => {\n  // take userAuth Object and add to firestore\n  const cartOrderTotalPriceArr = additionalInfo.reduce(\n    (acom, current) => acom + current.totalPriseOrder,\n    0,\n  );\n  const cartOrderTotalCountArr = additionalInfo.reduce(\n    (acom, current) => acom + current.totalCountOrder,\n    0,\n  );\n  if (!userAuth) return;\n  const { uid } = userAuth; // take current user id\n\n  const currentUserRef = firestore.doc(`users/${uid}`); // if user not exists,it is new user and we need create new document inside firebase\n  const snapshot = await currentUserRef.get(); // wait object from firestore\n  if (!snapshot.exists) {\n    const { email } = userAuth; // add more other, when we create new document (+ cart order)\n    const timestamp = new Date();\n    const currentTime = {\n      day: timestamp.getDate(),\n      month: timestamp.getMonth() + 1,\n      year: timestamp.getFullYear(),\n      minute: timestamp.getMinutes(),\n      hours: timestamp.getHours(),\n    };\n    await currentUserRef.set({\n      // create new\n      email,\n      date: currentTime,\n      totalOrderGoodsCount: cartOrderTotalCountArr,\n      totalOrderGoodsPrice: cartOrderTotalPriceArr,\n    });\n  }\n  return currentUserRef; // for update local state of app\n};\n\nexport default app;\n","import { FaUserCircle } from 'react-icons/fa';\nimport { useAppSelector } from '../../../redux/hooks';\nimport styles from './PersonalProfile.module.css';\nimport { selectOrderValue } from './personalProfileSlice';\n\ninterface Props {\n  logOut: () => void;\n  email: string;\n}\n\nexport const PersonalProfile: React.FC<Props> = ({ logOut, email }) => {\n  const order = useAppSelector(selectOrderValue);\n\n  return (\n    <section className={styles.personalProfile}>\n      <div className={styles.personalProfileData}>\n        <h2 className={styles.personalProfileFormTitle}>Ваши данные:</h2>\n        <div className={styles.personalEmail}>\n          <div className={styles.personalEmailIcon}>\n            <FaUserCircle size={120} />\n          </div>\n\n          <div className={styles.personalEmailData}>\n            <span className={styles.personalEmailDataTitle}>Ваш email</span>\n            <span className={styles.personalEmailDataMail}>{email}</span>\n          </div>\n        </div>\n        <div className={styles.personalSale}>\n          <div className={styles.personalSaleTitle}>Скидка на все товары</div>\n          <div className={styles.personalSaleResult}>10%</div>\n        </div>\n\n        <button type=\"submit\" className={styles.accountButton} onClick={logOut}>\n          Выйти\n        </button>\n      </div>\n\n      <div>\n        <h2 className={styles.personalProfileFormTitle}>Ваш Заказ:</h2>\n        {order.length ? (\n          <div className={styles.orderWrapper}>\n            <div className={styles.order}>\n              <div className={styles.orderTitle}>Спасибо, что выбрали Нас!</div>\n              <div className={styles.orderText}>\n                Вы заказали\n                <span>\n                  {' '}\n                  {order.reduce(\n                    (accomulator, item) => accomulator + item.totalCountOrder,\n                    0,\n                  )}{' '}\n                  шт. товаров\n                </span>\n              </div>\n              <div className={styles.orderText}>\n                На общую сумму\n                <span>\n                  {' '}\n                  {order.reduce(\n                    (accomulator, item) => accomulator + item.totalPriseOrder,\n                    0,\n                  )}{' '}\n                  рублей\n                </span>\n              </div>\n            </div>\n          </div>\n        ) : (\n          <div className={styles.orderWrapper}>\n            <div className={styles.order}>\n              <p className={styles.orderTitle}>У Вас пока нет заказов</p>\n              <p className={styles.orderText}>\n                Выберите товары и закажите их в разделе Корзина\n              </p>\n            </div>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n","import React from 'react';\nimport styles from './Button.module.css';\n\ninterface Props {\n  text: string;\n  handler: (e: React.MouseEvent) => void;\n}\n\nexport const Button: React.FC<Props> = ({ text, handler }) => {\n  return (\n    <button type=\"submit\" onClick={handler} className={styles.button}>\n      {text}\n    </button>\n  );\n};\n","import React from 'react';\nimport styles from './ProfileInput.module.css';\n\ninterface Props {\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  value: string;\n  type: string;\n  placeholder: string;\n}\n\nexport const ProfileInput: React.FC<Props> = ({\n  onChange,\n  placeholder,\n  type,\n  value,\n}) => {\n  return (\n    <div>\n      <input\n        type={type}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n        className={styles.input}\n        min-length=\"4\"\n        max-length=\"30\"\n        required\n      />\n    </div>\n  );\n};\n","/* eslint-disable import/no-named-as-default-member */\nimport React, { useCallback, useEffect, useState } from 'react';\nimport app, { userProfileHandler } from '../../../firebase';\nimport { useAppDispatch, useAppSelector } from '../../../redux/hooks';\nimport { selectCurrentUser, setCurrentUser } from '../../../redux/userSlice';\nimport { PersonalProfile } from '../PersonalProfilePage/PersonalProfile';\nimport { selectOrderValue } from '../PersonalProfilePage/personalProfileSlice';\nimport { Button } from './Button/Button';\nimport styles from './Profile.module.css';\nimport { ProfileInput } from './ProfileInput/ProfileInput';\n\nconst Profile = () => {\n  const dispatch = useAppDispatch();\n  const order = useAppSelector(selectOrderValue);\n  const userFromState = useAppSelector(selectCurrentUser);\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const [alreadyHasAccount, setAlreadyHasAccount] = useState(false);\n\n  const cleanInputs = () => {\n    setEmail('');\n    setPassword('');\n  };\n\n  const cleanErrors = () => {\n    setError('');\n  };\n\n  const logInHandler = (e: React.MouseEvent) => {\n    e.preventDefault();\n    cleanErrors();\n    app\n      .auth()\n      .signInWithEmailAndPassword(email, password) // login as exist user\n      .catch((error) => {\n        switch (error.code) {\n          case 'auth/invalid-email':\n          case 'auth/user-disabled':\n          case 'auth/user-not-found':\n            setError(error.message);\n            break;\n          case 'auth/wrong-password':\n            setError(error.message);\n            break;\n          default:\n        }\n      });\n  };\n\n  const signUpHandler = (e: React.MouseEvent) => {\n    e.preventDefault();\n    cleanErrors();\n    app\n      .auth()\n      .createUserWithEmailAndPassword(email, password) // create new user\n      .then((userCredential) => {\n        const { user } = userCredential; // this is new object user\n        userProfileHandler(user, order); // add new user and his order to firestore\n      })\n      .catch((error) => {\n        switch (error.code) {\n          case 'auth/email-already-in-use':\n          case 'auth/invalid-email':\n            setError(error.message);\n            break;\n          case 'auth/weak-password':\n            setError(error.message);\n            break;\n          default:\n        }\n      });\n  };\n\n  const logOutHandler = () => {\n    app.auth().signOut(); // exit from profile personal\n  };\n\n  const authListener = useCallback(() => {\n    // check if user exsist,only then set him\n    app.auth().onAuthStateChanged(async (userAuth) => {\n      if (userAuth) {\n        const userRef = await userProfileHandler(userAuth, order);\n        userRef?.onSnapshot((snapshot) => {\n          // use it instead of get(take once and forget), take data from firestore that method use becouse we need to listen changes in this document all time\n          dispatch(\n            setCurrentUser({\n              id: snapshot.id, // take id from firestore\n              ...snapshot.data(), // take other info from firestore\n            }),\n          );\n        });\n        cleanInputs();\n      } else {\n        dispatch(setCurrentUser(userAuth)); // if user not login\n      }\n    });\n  }, [dispatch, order]);\n\n  useEffect(() => {\n    authListener();\n    return () => {\n      // it is very similar as componentWillUnMount\n      authListener();\n    };\n  }, [authListener]); // [x] -when x value changed , all code inside useEffect re-run (change on every render)\n\n  const changeNameInput = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setEmail(e.target.value);\n  };\n\n  const changePasswordInput = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setPassword(e.target.value);\n  };\n\n  return (\n    <section className={styles.profile}>\n      {userFromState ? ( // if user existes\n        <PersonalProfile logOut={logOutHandler} email={userFromState.email} />\n      ) : (\n        // if user not existes\n        <div className={styles.profileWrapper}>\n          <h2 className={styles.profileTitle}>Войти</h2>\n          <ProfileInput\n            onChange={changeNameInput}\n            value={email}\n            type=\"email\"\n            placeholder=\"Email\"\n          />\n          <ProfileInput\n            onChange={changePasswordInput}\n            value={password}\n            type=\"password\"\n            placeholder=\"Пароль\"\n          />\n          <p className={styles.errorMessage}>{error}</p>\n          {alreadyHasAccount ? (\n            <>\n              <Button handler={logInHandler} text=\"Войти\" />\n              <p>\n                <span className={styles.accountMessage}>\n                  {' '}\n                  Если у Вас нет аккаунта?{' '}\n                </span>\n                <span\n                  className={styles.accountMessageTitle}\n                  onClick={() =>\n                    setAlreadyHasAccount(\n                      (alreadyHasAccount) => !alreadyHasAccount,\n                    )\n                  }\n                >\n                  Зарегистрируйтесь\n                </span>\n              </p>\n            </>\n          ) : (\n            <>\n              <Button handler={signUpHandler} text=\"Зарегистрироваться\" />\n              <p>\n                <span className={styles.accountMessage}>\n                  {' '}\n                  Уже есть аккаунт?{' '}\n                </span>\n                <span\n                  className={styles.accountMessageTitle}\n                  onClick={() =>\n                    setAlreadyHasAccount(\n                      (alreadyHasAccount) => !alreadyHasAccount,\n                    )\n                  }\n                >\n                  Войти\n                </span>\n              </p>\n            </>\n          )}\n        </div>\n      )}\n    </section>\n  );\n};\n\nexport default Profile;\n"],"sourceRoot":""}